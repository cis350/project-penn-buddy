{"ast":null,"code":"var _jsxFileName = \"/Users/nickywong/Documents/GitHub/project-penn-buddy/client/src/components/MyText.js\";\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-console */\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// import { makeStyles } from '@mui/styles';\nimport { Paper, Grid, Box, Divider, TextField, Typography, List, ListItem, ListItemIcon, ListItemText, Avatar, Fab, createTheme, Stack, Button, ThemeProvider, AppBar, Toolbar } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SendIcon from '@mui/icons-material/Send';\nimport { getChatroomById } from '../api/chat';\n\n// function textRow(props) {\n//   return (\n//     <ListItem key=\"1\">\n//       <Grid container>\n//         <Grid item xs={12}>\n//           <ListItemText align=\"right\" primary={props.texts.content}\n// style={{ color: '#0096FF' }} />\n//         </Grid>\n//       </Grid>\n//     </ListItem>\n//   );\n// }\n\n// const rightText = (content, index) => (\n//   <ListItem key={index}>\n//     <Grid container>\n//       <Grid item xs={12}>\n//         <ListItemText align=\"right\" primary={content} style={{ color: '#0096FF' }} />\n//       </Grid>\n//     </Grid>\n//   </ListItem>\n// );\n\n// const leftText = (content, index) => (\n//   <ListItem key={index}>\n//     <Grid container>\n//       <Grid item xs={12}>\n//         <ListItemText align=\"left\" primary={content} style={{ color: '#0096FF' }} />\n//       </Grid>\n//     </Grid>\n//   </ListItem>\n// );\n\n// const genText = (t, index, currUserId) => {\n//   if (t.userId === currUserId) {\n//     console.log('is user');\n//     rightText(t.content, index);\n//   } else {\n//     console.log('is not user');\n//     leftText(t.content, index);\n//   }\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyText(_ref) {\n  let {\n    text,\n    currMembersId,\n    userId\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text.map((t, index) =>\n    /*#__PURE__*/\n    // <div>\n    //   {genText(t, index, userId)}\n    // </div>\n    // to create the separate components depending on t.userId == currentUserId\n    // myText vs OtherText\n    _jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            \"data-testid\": \"text-content\",\n            align: \"right\",\n            style: {\n              color: 'black'\n            },\n            primary: t.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            \"data-testid\": \"sender\",\n            align: \"right\",\n            primary: t.content,\n            style: {\n              color: '#0096FF'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c = MyText;\nvar _c;\n$RefreshReg$(_c, \"MyText\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","Paper","Grid","Box","Divider","TextField","Typography","List","ListItem","ListItemIcon","ListItemText","Avatar","Fab","createTheme","Stack","Button","ThemeProvider","AppBar","Toolbar","ArrowBackIcon","SendIcon","getChatroomById","jsxDEV","_jsxDEV","MyText","_ref","text","currMembersId","userId","children","map","t","index","container","item","xs","align","style","color","primary","fileName","_jsxFileName","lineNumber","columnNumber","content","_c","$RefreshReg$"],"sources":["/Users/nickywong/Documents/GitHub/project-penn-buddy/client/src/components/MyText.js"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-console */\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// import { makeStyles } from '@mui/styles';\nimport {\n  Paper, Grid, Box, Divider, TextField, Typography,\n  List, ListItem, ListItemIcon, ListItemText, Avatar, Fab,\n  createTheme, Stack, Button, ThemeProvider,\n  AppBar, Toolbar,\n} from '@mui/material';\n\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SendIcon from '@mui/icons-material/Send';\nimport { getChatroomById } from '../api/chat';\n\n// function textRow(props) {\n//   return (\n//     <ListItem key=\"1\">\n//       <Grid container>\n//         <Grid item xs={12}>\n//           <ListItemText align=\"right\" primary={props.texts.content}\n// style={{ color: '#0096FF' }} />\n//         </Grid>\n//       </Grid>\n//     </ListItem>\n//   );\n// }\n\n// const rightText = (content, index) => (\n//   <ListItem key={index}>\n//     <Grid container>\n//       <Grid item xs={12}>\n//         <ListItemText align=\"right\" primary={content} style={{ color: '#0096FF' }} />\n//       </Grid>\n//     </Grid>\n//   </ListItem>\n// );\n\n// const leftText = (content, index) => (\n//   <ListItem key={index}>\n//     <Grid container>\n//       <Grid item xs={12}>\n//         <ListItemText align=\"left\" primary={content} style={{ color: '#0096FF' }} />\n//       </Grid>\n//     </Grid>\n//   </ListItem>\n// );\n\n// const genText = (t, index, currUserId) => {\n//   if (t.userId === currUserId) {\n//     console.log('is user');\n//     rightText(t.content, index);\n//   } else {\n//     console.log('is not user');\n//     leftText(t.content, index);\n//   }\n// };\n\nexport default function MyText({ text, currMembersId, userId }) {\n  return (\n    <div>\n      {\n      text\n        .map((t, index) => (\n          // <div>\n          //   {genText(t, index, userId)}\n          // </div>\n          // to create the separate components depending on t.userId == currentUserId\n          // myText vs OtherText\n          <ListItem key={index}>\n            <Grid container>\n              <Grid item xs={12}>\n                <ListItemText data-testid=\"text-content\" align=\"right\" style={{ color: 'black' }} primary={t.userId} />\n                <ListItemText data-testid=\"sender\" align=\"right\" primary={t.content} style={{ color: '#0096FF' }} />\n              </Grid>\n            </Grid>\n          </ListItem>\n        ))\n    }\n    </div>\n  );\n}\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,QAAQ,kBAAkB;;AAE5C;AACA,SACEC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAEC,SAAS,EAAEC,UAAU,EAChDC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,YAAY,EAAEC,MAAM,EAAEC,GAAG,EACvDC,WAAW,EAAEC,KAAK,EAAEC,MAAM,EAAEC,aAAa,EACzCC,MAAM,EAAEC,OAAO,QACV,eAAe;AAEtB,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,eAAe,QAAQ,aAAa;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAkC;EAAA,IAAjC;IAAEC,IAAI;IAAEC,aAAa;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAC5D,oBACEF,OAAA;IAAAM,QAAA,EAEEH,IAAI,CACDI,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK;IAAA;IACZ;IACA;IACA;IACA;IACA;IACAT,OAAA,CAACf,QAAQ;MAAAqB,QAAA,eACPN,OAAA,CAACrB,IAAI;QAAC+B,SAAS;QAAAJ,QAAA,eACbN,OAAA,CAACrB,IAAI;UAACgC,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAN,QAAA,gBAChBN,OAAA,CAACb,YAAY;YAAC,eAAY,cAAc;YAAC0B,KAAK,EAAC,OAAO;YAACC,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAQ,CAAE;YAACC,OAAO,EAAER,CAAC,CAACH;UAAO;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eACvGpB,OAAA,CAACb,YAAY;YAAC,eAAY,QAAQ;YAAC0B,KAAK,EAAC,OAAO;YAACG,OAAO,EAAER,CAAC,CAACa,OAAQ;YAACP,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAU;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC/F;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF,GANMX,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAQrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEA;AAEV;AAACE,EAAA,GAvBuBrB,MAAM;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}