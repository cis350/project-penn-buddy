{"ast":null,"code":"/* eslint-disable consistent-return */\n// HTTP client\nimport axios from \"axios\";\nimport { rootURL } from \"../utils/utils\";\n/**\n * This module contains HTTP calls to the backend\n */\n\nexport const getChatroomById = async id => {\n  try {\n    const response = await axios.get(`${rootURL}/Chatroom/${id}`);\n    return response.data;\n  } catch (err) {\n    // console.error('error', err.message);\n  }\n};\nexport const getAllChatroom = async () => {\n  try {\n    const response = await axios.get(`${rootURL}/Chatroom`);\n    return response.data;\n  } catch (err) {\n    // console.log('error', err.message);\n  }\n};\nexport const modifyText = async (id, texts, currentMembersIds) => {\n  try {\n    console.log('chat room id is', id);\n    const chatId = id;\n    const response = await axios.put(`${rootURL}/Chatroom/${chatId}`, {\n      id,\n      texts,\n      currentMembersIds\n    });\n    // OH, YOU HAVE TO INSERT A NEW TEXT ELEMENT\n    // OR JUST REPLACE THE ARRAYYYY\n    return response.data;\n  } catch (err) {\n    //   console.log('error', err.message);\n  }\n};\nexport const createNewChatroom = async (chatId, membersId) => {\n  try {\n    const id = parseInt(chatId, 10);\n    const texts = [];\n    const currentMembersIds = membersId;\n    console.log('members id in chatjs', currentMembersIds);\n    const response = await axios.post(`${rootURL}/Chatroom`, {\n      id,\n      texts,\n      currentMembersIds\n    });\n    return response.data;\n  } catch (err) {\n    // console.log('error', err);\n  }\n};\nexport const deleteChatroom = async id => {\n  try {\n    const chatId = id;\n    console.log('char id to be delete', chatId);\n    const response = await axios.delete(`${rootURL}/Chatroom/${chatId}`);\n    return response.data;\n  } catch (err) {\n    // console.log('error', err);\n  }\n};","map":{"version":3,"names":["axios","rootURL","getChatroomById","id","response","get","data","err","getAllChatroom","modifyText","texts","currentMembersIds","console","log","chatId","put","createNewChatroom","membersId","parseInt","post","deleteChatroom","delete"],"sources":["/Users/nickywong/Documents/GitHub/project-penn-buddy/client/src/api/chat.js"],"sourcesContent":["/* eslint-disable consistent-return */\n// HTTP client\nimport axios from \"axios\";\nimport { rootURL } from \"../utils/utils\";\n/**\n * This module contains HTTP calls to the backend\n */\n\nexport const getChatroomById = async (id) => {\n  try {\n    const response = await axios.get(`${rootURL}/Chatroom/${id}`);\n    return response.data;\n  } catch (err) {\n    // console.error('error', err.message);\n  }\n};\n\nexport const getAllChatroom = async () => {\n  try {\n    const response = await axios.get(`${rootURL}/Chatroom`);\n    return response.data;\n  } catch (err) {\n    // console.log('error', err.message);\n  }\n};\nexport const modifyText = async (id, texts, currentMembersIds) => {\n  try {\n    console.log('chat room id is', id);\n    const chatId = id;\n    const response = await axios.put(`${rootURL}/Chatroom/${chatId}`, { id, texts, currentMembersIds });\n    // OH, YOU HAVE TO INSERT A NEW TEXT ELEMENT\n    // OR JUST REPLACE THE ARRAYYYY\n    return response.data;\n  } catch (err) {\n    //   console.log('error', err.message);\n  }\n};\n\nexport const createNewChatroom = async (chatId, membersId) => {\n  try {\n    const id = parseInt(chatId, 10);\n    const texts = [];\n    const currentMembersIds = membersId;\n    console.log('members id in chatjs', currentMembersIds);\n    const response = await axios.post(`${rootURL}/Chatroom`, { id, texts, currentMembersIds });\n    return response.data;\n  } catch (err) {\n    // console.log('error', err);\n  }\n};\n\nexport const deleteChatroom = async (id) => {\n  try {\n    const chatId = id;\n    console.log('char id to be delete', chatId);\n    const response = await axios.delete(`${rootURL}/Chatroom/${chatId}`);\n    return response.data;\n  } catch (err) {\n    // console.log('error', err);\n  }\n};\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,gBAAgB;AACxC;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAOC,EAAE,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,OAAQ,aAAYE,EAAG,EAAC,CAAC;IAC7D,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ;EAAA;AAEJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,OAAQ,WAAU,CAAC;IACvD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ;EAAA;AAEJ,CAAC;AACD,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAON,EAAE,EAAEO,KAAK,EAAEC,iBAAiB,KAAK;EAChE,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEV,EAAE,CAAC;IAClC,MAAMW,MAAM,GAAGX,EAAE;IACjB,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACe,GAAG,CAAE,GAAEd,OAAQ,aAAYa,MAAO,EAAC,EAAE;MAAEX,EAAE;MAAEO,KAAK;MAAEC;IAAkB,CAAC,CAAC;IACnG;IACA;IACA,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ;EAAA;AAEJ,CAAC;AAED,OAAO,MAAMS,iBAAiB,GAAG,MAAAA,CAAOF,MAAM,EAAEG,SAAS,KAAK;EAC5D,IAAI;IACF,MAAMd,EAAE,GAAGe,QAAQ,CAACJ,MAAM,EAAE,EAAE,CAAC;IAC/B,MAAMJ,KAAK,GAAG,EAAE;IAChB,MAAMC,iBAAiB,GAAGM,SAAS;IACnCL,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,iBAAiB,CAAC;IACtD,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACmB,IAAI,CAAE,GAAElB,OAAQ,WAAU,EAAE;MAAEE,EAAE;MAAEO,KAAK;MAAEC;IAAkB,CAAC,CAAC;IAC1F,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ;EAAA;AAEJ,CAAC;AAED,OAAO,MAAMa,cAAc,GAAG,MAAOjB,EAAE,IAAK;EAC1C,IAAI;IACF,MAAMW,MAAM,GAAGX,EAAE;IACjBS,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,MAAM,CAAC;IAC3C,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACqB,MAAM,CAAE,GAAEpB,OAAQ,aAAYa,MAAO,EAAC,CAAC;IACpE,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ;EAAA;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}