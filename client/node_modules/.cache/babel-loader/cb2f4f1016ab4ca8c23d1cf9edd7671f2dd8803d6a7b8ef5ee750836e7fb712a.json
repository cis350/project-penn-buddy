{"ast":null,"code":"var _jsxFileName = \"/Users/nickywong/Documents/GitHub/project-penn-buddy/client/src/components/MyText.js\";\n/* eslint-disable no-console */\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// import { makeStyles } from '@mui/styles';\nimport { Paper, Grid, Box, Divider, TextField, Typography, List, ListItem, ListItemIcon, ListItemText, Avatar, Fab, createTheme, Stack, Button, ThemeProvider, AppBar, Toolbar } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SendIcon from '@mui/icons-material/Send';\nimport { getChatroomById } from '../api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction textRow(props) {\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          align: \"right\",\n          primary: props.texts.content,\n          style: {\n            color: '#0096FF'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, \"1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\nexport default function MyText(_ref) {\n  let {\n    text\n  } = _ref;\n  // loop text.map, create the rows\n  // create a list of elements\n  // consider using the student table\n\n  const makeTexts = () => {\n    const textArray = [];\n    console.log('make text', text);\n    text.forEach(element => {\n      // textArray.push(<textRow props={element} />)\n      // text.push(textRow(element.content));\n      textArray.push(element.content);\n    });\n    console.log('text array', textArray);\n    return textArray;\n  };\n  const texts = makeTexts();\n  console.log('line 46', texts);\n  console.log('norm text', text);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text.map((t, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            align: \"right\",\n            primary: t.content,\n            style: {\n              color: '#0096FF'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = MyText;\nvar _c;\n$RefreshReg$(_c, \"MyText\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","Paper","Grid","Box","Divider","TextField","Typography","List","ListItem","ListItemIcon","ListItemText","Avatar","Fab","createTheme","Stack","Button","ThemeProvider","AppBar","Toolbar","ArrowBackIcon","SendIcon","getChatroomById","jsxDEV","_jsxDEV","textRow","props","children","container","item","xs","align","primary","texts","content","style","color","fileName","_jsxFileName","lineNumber","columnNumber","MyText","_ref","text","makeTexts","textArray","console","log","forEach","element","push","map","t","index","_c","$RefreshReg$"],"sources":["/Users/nickywong/Documents/GitHub/project-penn-buddy/client/src/components/MyText.js"],"sourcesContent":["/* eslint-disable no-console */\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// import { makeStyles } from '@mui/styles';\nimport {\n  Paper, Grid, Box, Divider, TextField, Typography,\n  List, ListItem, ListItemIcon, ListItemText, Avatar, Fab,\n  createTheme, Stack, Button, ThemeProvider,\n  AppBar, Toolbar,\n} from '@mui/material';\n\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SendIcon from '@mui/icons-material/Send';\nimport { getChatroomById } from '../api/chat';\n\nfunction textRow(props) {\n  return (\n    <ListItem key=\"1\">\n      <Grid container>\n        <Grid item xs={12}>\n          <ListItemText align=\"right\" primary={props.texts.content} style={{ color: '#0096FF' }} />\n        </Grid>\n      </Grid>\n    </ListItem>\n  );\n}\n\nexport default function MyText({ text }) {\n  // loop text.map, create the rows\n  // create a list of elements\n  // consider using the student table\n\n  const makeTexts = () => {\n    const textArray = [];\n    console.log('make text', text);\n    text.forEach((element) => {\n      // textArray.push(<textRow props={element} />)\n      // text.push(textRow(element.content));\n      textArray.push(element.content);\n    });\n    console.log('text array', textArray);\n    return textArray;\n  };\n\n  const texts = makeTexts();\n  console.log('line 46', texts);\n  console.log('norm text', text);\n  return (\n    <div>\n      {\n      text.map((t, index) => (\n        <ListItem key={index}>\n          <Grid container>\n            <Grid item xs={12}>\n              <ListItemText align=\"right\" primary={t.content} style={{ color: '#0096FF' }} />\n            </Grid>\n          </Grid>\n        </ListItem>\n      ))\n    }\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}