{"ast":null,"code":"var _jsxFileName = \"/Users/nickywong/Documents/GitHub/project-penn-buddy/client/src/components/ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\n// import { makeStyles } from '@mui/styles';\nimport { Paper, Grid, Box, Divider, TextField, Typography, List, ListItem, ListItemIcon, ListItemText, Avatar, Fab, createTheme, Stack, Button, ThemeProvider, AppBar, Toolbar } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SendIcon from '@mui/icons-material/Send';\nimport { getChatroomById, modifyText, getAllChatroom, deleteChatroom } from '../api/chat';\nimport MyText from \"./MyText\";\nimport { getUserById } from '../api/users';\n\n// import SendMessage from './chat/SendMessage';\n// import { getAllChats } from '../api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatDisplay(_ref) {\n  _s();\n  let {\n    userId,\n    chatId\n  } = _ref;\n  // for backend mocking\n  // try hardcoding chatId for now bc we only have one chat\n  // const { chatId } = useParams();\n  const [text, setText] = useState([]);\n  const [chatrooms, setChatrooms] = useState([]);\n  const [currentMembersIds, setCurrentMembersIds] = useState([]);\n  const [currMembersName, setCurrMembersName] = useState([]);\n  const [filteredCr, setFiltered] = useState([]);\n  const [render, setRender] = useState(false);\n  // let memName be an array of array\n  // memName[i] has i-th chat's name of everyone\n\n  const message = useRef('');\n  const listNum = useRef(1);\n  const currChatId = chatId.current;\n\n  // const fullName = name.concat(lastName);\n\n  // const [currChatId, setCurrChatId] = React.useState(1);\n\n  // next time, I have to enter id as a prop, depending on where user clicks\n  useEffect(() => {\n    async function getAllTextsWrapper() {\n      const r2 = await getChatroomById(currChatId);\n      setText(r2.texts);\n      setCurrentMembersIds(r2.currentMembersIds);\n      setCurrMembersName(r2.currentMembersIds);\n    }\n    getAllTextsWrapper();\n  });\n\n  // display texts accordingly\n  // input change event handler\n  const handleInputText = e => {\n    message.current = e.target.value; // update the reference\n  };\n\n  const modifyTextOnServer = async (textData, membersData) => {\n    // console.log('text input', message);\n    const response = await modifyText(currChatId, textData, membersData);\n  };\n  const handleSendText = e => {\n    // update the login state\n    // setRender(!render);\n    const modifiedTextData = [];\n    text.forEach(element => {\n      modifiedTextData.push(element);\n    });\n    const modifiedData = {\n      userId,\n      content: message.current\n    };\n    modifiedTextData.push(modifiedData);\n    modifyTextOnServer(modifiedTextData, currentMembersIds);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 9,\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      style: {\n        color: 'white',\n        backgroundColor: '#F0F0F0',\n        height: '680px'\n      },\n      children: /*#__PURE__*/_jsxDEV(MyText, {\n        \"data-testid\": \"textData\",\n        text: text,\n        currMembersId: currentMembersIds,\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        color: 'white',\n        backgroundColor: '#D9D9D9',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 11,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic-email\",\n          label: \"Enter a message...\",\n          fullWidth: true,\n          onChange: handleInputText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 1,\n        align: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"add\",\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {\n            \"data-testid\": \"send\",\n            onClick: handleSendText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatDisplay, \"LDWopO7pRH+iTobGb/+lGSN3wKs=\");\n_c = ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","useNavigate","Paper","Grid","Box","Divider","TextField","Typography","List","ListItem","ListItemIcon","ListItemText","Avatar","Fab","createTheme","Stack","Button","ThemeProvider","AppBar","Toolbar","ArrowBackIcon","SendIcon","getChatroomById","modifyText","getAllChatroom","deleteChatroom","MyText","getUserById","jsxDEV","_jsxDEV","ChatDisplay","_ref","_s","userId","chatId","text","setText","chatrooms","setChatrooms","currentMembersIds","setCurrentMembersIds","currMembersName","setCurrMembersName","filteredCr","setFiltered","render","setRender","message","listNum","currChatId","current","getAllTextsWrapper","r2","texts","handleInputText","e","target","value","modifyTextOnServer","textData","membersData","response","handleSendText","modifiedTextData","forEach","element","push","modifiedData","content","item","xs","children","style","color","backgroundColor","height","currMembersId","fileName","_jsxFileName","lineNumber","columnNumber","container","padding","id","label","fullWidth","onChange","align","onClick","_c","$RefreshReg$"],"sources":["/Users/nickywong/Documents/GitHub/project-penn-buddy/client/src/components/ChatDisplay.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\n// import { makeStyles } from '@mui/styles';\nimport {\n  Paper, Grid, Box, Divider, TextField, Typography,\n  List, ListItem, ListItemIcon, ListItemText, Avatar, Fab,\n  createTheme, Stack, Button, ThemeProvider,\n  AppBar, Toolbar,\n} from '@mui/material';\n\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SendIcon from '@mui/icons-material/Send';\n\nimport {\n  getChatroomById, modifyText, getAllChatroom, deleteChatroom,\n} from '../api/chat';\nimport MyText from \"./MyText\";\nimport { getUserById } from '../api/users';\n\n// import SendMessage from './chat/SendMessage';\n// import { getAllChats } from '../api/chat';\n\nexport default function ChatDisplay({ userId, chatId }) {\n// for backend mocking\n  // try hardcoding chatId for now bc we only have one chat\n  // const { chatId } = useParams();\n  const [text, setText] = useState([]);\n  const [chatrooms, setChatrooms] = useState([]);\n  const [currentMembersIds, setCurrentMembersIds] = useState([]);\n  const [currMembersName, setCurrMembersName] = useState([]);\n  const [filteredCr, setFiltered] = useState([]);\n  const [render, setRender] = useState(false);\n  // let memName be an array of array\n  // memName[i] has i-th chat's name of everyone\n\n  const message = useRef('');\n  const listNum = useRef(1);\n  const currChatId = chatId.current;\n\n  // const fullName = name.concat(lastName);\n\n  // const [currChatId, setCurrChatId] = React.useState(1);\n\n  // next time, I have to enter id as a prop, depending on where user clicks\n  useEffect(() => {\n    async function getAllTextsWrapper() {\n      const r2 = await getChatroomById(currChatId);\n      setText(r2.texts);\n      setCurrentMembersIds(r2.currentMembersIds);\n      setCurrMembersName(r2.currentMembersIds);\n    }\n    getAllTextsWrapper();\n  });\n\n  // display texts accordingly\n  // input change event handler\n  const handleInputText = (e) => {\n    message.current = e.target.value; // update the reference\n  };\n\n  const modifyTextOnServer = async (textData, membersData) => {\n    // console.log('text input', message);\n    const response = await modifyText(currChatId, textData, membersData);\n  };\n\n  const handleSendText = (e) => {\n    // update the login state\n    // setRender(!render);\n    const modifiedTextData = [];\n    text.forEach((element) => {\n      modifiedTextData.push(element);\n    });\n    const modifiedData = {\n      userId,\n      content: message.current,\n    };\n    modifiedTextData.push(modifiedData);\n    modifyTextOnServer(modifiedTextData, currentMembersIds);\n  };\n\n  return (\n    <Grid item xs={9}>\n      <List style={{ color: 'white', backgroundColor: '#F0F0F0', height: '680px' }}>\n        <MyText data-testid=\"textData\" text={text} currMembersId={currentMembersIds} userId={userId} />\n      </List>\n      <Divider />\n      <Grid container style={{ color: 'white', backgroundColor: '#D9D9D9', padding: '20px' }}>\n        <Grid item xs={11}>\n          <TextField id=\"outlined-basic-email\" label=\"Enter a message...\" fullWidth onChange={handleInputText} />\n        </Grid>\n        <Grid xs={1} align=\"right\">\n          <Fab color=\"primary\" aria-label=\"add\"><SendIcon data-testid=\"send\" onClick={handleSendText} /></Fab>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}